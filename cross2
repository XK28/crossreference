import pandas as pd
import os
from reportlab.lib.pagesizes import letter
from reportlab.platypus import SimpleDocTemplate, Table, TableStyle, Paragraph
from reportlab.lib import colors
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.lib.units import inch

# =======================
# Rutas de carpetas
# =======================
carpeta_validar = r"C:\Users\Pc\Desktop\crossreference\validar"
carpeta_referencia = r"C:\Users\Pc\Desktop\crossreference\referencia"
ruta_pdf_salida = r"C:\Users\Pc\Desktop\crossreference\resultado.pdf"

# =======================
# 1️⃣ Leer archivo validar
# =======================
archivos_validar = [f for f in os.listdir(
    carpeta_validar) if f.endswith(('.xlsx', '.xls'))]
if not archivos_validar:
    raise FileNotFoundError(
        "No se encontró ningún archivo en la carpeta de validar.")

ruta_validar = os.path.join(carpeta_validar, archivos_validar[0])
df_validar = pd.read_excel(ruta_validar, engine='openpyxl', header=None)

# Columnas B y C → ID y DESCRIPCION
df_validar = df_validar[[1, 2]]
df_validar.columns = ['ID', 'DESCRIPCION']
df_validar['LLAVE'] = df_validar['ID'].astype(
    str) + " | " + df_validar['DESCRIPCION'].astype(str)

# =======================
# 2️⃣ Leer todos los archivos referencia
# =======================
archivos_referencia = [f for f in os.listdir(
    carpeta_referencia) if f.endswith(('.xlsx', '.xls'))]
if not archivos_referencia:
    raise FileNotFoundError(
        "No se encontró ningún archivo en la carpeta de referencia.")

df_ref_total = pd.DataFrame()
for archivo in archivos_referencia:
    ruta_ref = os.path.join(carpeta_referencia, archivo)
    df_ref = pd.read_excel(ruta_ref, engine='openpyxl', header=None)
    df_ref = df_ref[0].str.split('|', expand=True)  # separar por '|'

    # Crear llave combinada, ID en columna 0 y DESCRIPCION en columna 5
    df_ref['LLAVE'] = df_ref[0].astype(str) + " | " + df_ref[5].astype(str)

    df_ref_total = pd.concat([df_ref_total, df_ref], ignore_index=True)

# =======================
# 3️⃣ Encontrar llaves de validar que NO están en referencia
# =======================
llaves_no_encontradas = df_validar[~df_validar['LLAVE'].isin(
    df_ref_total['LLAVE'])]

# =======================
# 4️⃣ Crear PDF con llaves combinadas
# =======================
doc = SimpleDocTemplate(ruta_pdf_salida, pagesize=letter)
elements = []

styles = getSampleStyleSheet()

# Encabezado
data = [[Paragraph("LLAVE NO ENCONTRADA", styles['Heading4'])]]

# Agregamos las llaves como párrafos para que se ajusten si son largas
for llave in llaves_no_encontradas['LLAVE']:
    data.append([Paragraph(llave, styles['Normal'])])

# Tabla con ancho amplio y altura de fila ajustable
tabla = Table(data, colWidths=[6.5*inch], rowHeights=None)

tabla.setStyle(TableStyle([
    ('BACKGROUND', (0, 0), (-1, 0), colors.gray),
    ('TEXTCOLOR', (0, 0), (-1, 0), colors.whitesmoke),
    ('ALIGN', (0, 0), (-1, -1), 'LEFT'),
    ('GRID', (0, 0), (-1, -1), 0.5, colors.black),
    ('FONTNAME', (0, 0), (-1, 0), 'Helvetica-Bold'),
    ('VALIGN', (0, 0), (-1, -1), 'TOP')
]))

elements.append(tabla)
doc.build(elements)

print("PDF generado correctamente en:", ruta_pdf_salida)
